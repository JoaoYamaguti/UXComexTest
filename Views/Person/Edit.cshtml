@model UxcomexTest.Models.PersonAddress;

@{
    ViewData["Title"] = "Edit";
}
<section class="editPerson">
    <header class="breadcrumbNav">
        <nav>
            <a asp-action="Index">Pessoas</a>
            <i class="bi bi-chevron-compact-right text-secondary"></i>
            Edição
        </nav>
        <hr />
    </header>

    <form id="formPerson" asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="person.Id" />
        <div class="form-group">
            <label asp-for="person.Name" class="control-label"></label>
            <input asp-for="person.Name" class="form-control" />
            <span asp-validation-for="person.Name" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="person.PhoneNumber" class="control-label"></label>
            <input asp-for="person.PhoneNumber" class="form-control" id="phoneNumber" />
            <span asp-validation-for="person.PhoneNumber" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="person.CPF" class="control-label"></label>
            <input asp-for="person.CPF" class="form-control" id="CPF" readonly />
            <span asp-validation-for="person.CPF" class="text-danger"></span>
        </div>
        <div class="btns form-group">
            <a type="button" class="btnClose" asp-action="Index">Voltar</a>
            <button id="subEditPerson" type="submit" value="Save" class="btnConfirme">Save</button>
        </div>
    </form>

    <hr>

    <!-- Button trigger modal -->
    <button type="button" class="btnPage" data-bs-toggle="modal" data-bs-target="#exampleModal">
        +Endereço
    </button>

    @if (Model.person.Addresses != null)
    {
        <table class="excel">
            <thead>
                <tr>
                    <th>Endereço</th>
                    <th>Cidade</th>
                    <th>Estado</th>
                    <th>CEP</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var address in Model.person.Addresses)
                {
                    <tr>
                        <td data-title="@Html.DisplayNameFor(model => model.address.Name)">@address.Name</td>
                        <td data-title="@Html.DisplayNameFor(model => model.address.City)">@address.City</td>
                        <td data-title="@Html.DisplayNameFor(model => model.address.State)">@address.State</td>
                        <td data-title="@Html.DisplayNameFor(model => model.address.CEP)">@address.CEP</td>
                        <td data-title="Editar">
                            <a asp-controller="Address" asp-action="Edit" asp-route-id="@address.Id"
                                class="editLink text-decoration-none">
                                <i class="bi bi-pencil-fill fs-5"></i>
                            </a>
                        </td>
                        <td data-title="Excluir">
                            <a asp-controller="Address" asp-action="Delete" asp-route-id="@address.Id"
                                class="deleteLink text-decoration-none">
                                <i class="bi bi-x-lg fs-5"></i>
                            </a>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    }
</section>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <header class="breadcrumbNav">
                <nav>
                    <span>Endereço</span>
                    <i class="bi bi-chevron-compact-right text-secondary"></i>
                    Cadastro
                </nav>
                <hr />
            </header>

            <form id="formAddress" asp-controller="Address" asp-action="Create" asp-route-id="@Model.person.Id">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="address.CEP" class="control-label"></label>
                    <div class=" cepField">
                        <input asp-for="address.CEP" class="form-control" id="cep" />
                        <button type="button" id="cepSearch">Procurar</button>
                    </div>
                    <span asp-validation-for="address.CEP" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="address.Name" class="control-label"></label>
                    <input asp-for="address.Name" class="form-control" id="name" />
                    <span asp-validation-for="address.Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="address.City" class="control-label"></label>
                    <input asp-for="address.City" class="form-control" id="city" />
                    <span asp-validation-for="address.City" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="address.State" class="control-label"></label>
                    <input asp-for="address.State" class="form-control" id="state" />
                    <span asp-validation-for="address.State" class="text-danger"></span>
                </div>
                <div class="btns form-group">
                    <button type="button" class="btnClose" data-bs-dismiss="modal">Fechar</button>
                    <button type="submit" class="btnConfirme" value="Create">Cadastrar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
